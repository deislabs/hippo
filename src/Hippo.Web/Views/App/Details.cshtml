@model Hippo.Web.ViewModels.AppDetails

@{
    ViewData["Title"] = @Html.DisplayFor(model => model.Application.Name);
    Layout = "_AppLayout";
}

<div class="content-list">

    <div class="tab-pane env-default" asp-class="default">
        <div class="columns is-mobile">
            <div class="column">
                <div class="card">
                    <div class="card-content has-text-centered">
                        Showing all activity.
                    </div>
                </div>
            </div>
        </div>
        <div class="columns">
            <div class="column">
                @if (Model.Revisions.Any()) {
                    <ul class="rev-list">
                        @foreach (var revision in Model.Revisions.OrderByDescending(r => r.OrderKey())) {
                            <li class="rev-item">
                                @if (revision.ActiveOn().Any()) {
                                    <span class="rev-deployed">
                                        <strong>@Html.DisplayFor(modelItem => revision.RevisionNumber)</strong><span> was deployed to </span><span class="tag">@string.Join(", ", revision.ActiveOn().Select(c => c.Name))</span><span> on @Html.DisplayFor(modelItem => revision.Modified)</span>.
                                    </span>
                                } else {
                                    <span class="rev-not-deployed">
                                        <strong>@Html.DisplayFor(modelItem => revision.RevisionNumber)</strong><span> was pushed </span><span>on @Html.DisplayFor(modelItem => revision.Modified)</span>.
                                    </span>
                                }
                                <i class="fa fa-chevron-down"></i>
                                <pre>
@Html.DisplayFor(modelItem => revision)
                                </pre>
                            </li>
                        }
                    </ul>
                } else {
                    <p class="has-text-centered">No versions of your app are available to deploy yet.</p>
                    <p class="has-text-centered">You need to <code>hippo push</code> via the CLI. Check out <a href="https://docs.deislabs.io/hippo/">the docs</a> for details.</p>
                }
            </div>
        </div>

        <nav class="pagination" role="navigation" aria-label="pagination">
            <a class="pagination-previous" title="This is the first page" disabled>Previous</a>
            <a class="pagination-next">Next page</a>
            <ul class="pagination-list">
                <li>
                    <a class="pagination-link is-current" aria-label="Page 1" aria-current="page">1</a>
                </li>
                <li>
                    <a class="pagination-link" aria-label="Goto page 2">2</a>
                </li>
                <li>
                    <a class="pagination-link" aria-label="Goto page 3">3</a>
                </li>
            </ul>
        </nav>
    </div>

    @foreach (var item in Model.Channels) {
        <div class="tab-pane" asp-class="@item.Id">
            <div class="card">
                <div class="card-content">
                    <div class="columns">
                        <div class="column is-half">
                            <h2>@Html.DisplayFor(modelItem => item.Name)</h2>
                        </div>
                        <div class="column is-half">
                            <section class="env-rule-summary">
                                @if (item.RangeRule != null) {
                                    <p>
                                        <small>Auto deploying:</small>
                                        <span><code>@Html.DisplayFor(modelItem => item.RangeRule)</code>&nbsp;new versions.</span>
                                    </p>
                                } else {
                                    <p>
                                        <small>Deployment locked to:</small>
                                        <span>Version <code>@Html.DisplayFor(modelItem => item.SpecifiedRevision.RevisionNumber)</code>.</span>
                                    </p>
                                }
                                <a asp-action="EditChannel" asp-route-id="@item.Id" class="button is-small is-rounded is-outlined is-secondary">Edit</a>
                            </section>
                        </div>
                    </div>
                </div>
            </div>

            <div class="columns">
                <div class="column">
                    @if (Model.Revisions.Any()) {
                        <ul class="rev-list">
                             @* @foreach (var revision in Model.Revisions.OrderByDescending(r => r.OrderKey()).Where( revision.ActiveOn() == item.Name )) { *@
                             @foreach (var revision in Model.Revisions.OrderByDescending(r => r.OrderKey())) {
                                <li class="rev-item">
                                    @if (revision.ActiveOn().Any()) {
                                        <span class="rev-deployed">
                                            <strong>@Html.DisplayFor(modelItem => revision.RevisionNumber)</strong><span> was deployed to </span><span class="tag">@string.Join(", ", revision.ActiveOn().Select(c => c.Name))</span><span> on @Html.DisplayFor(modelItem => revision.Modified)</span>.
                                        </span>
                                    } else {
                                        <span class="rev-not-deployed">
                                            <strong>@Html.DisplayFor(modelItem => revision.RevisionNumber)</strong><span> was pushed </span><span>on @Html.DisplayFor(modelItem => revision.Modified)</span>.
                                        </span>
                                    }
                                    <i class="fa fa-chevron-down"></i>
                                    <pre>
@Html.DisplayFor(modelItem => revision)
                                    </pre>
                                </li>
                            }
                        </ul>
                    } else {
                        <p class="has-text-centered">No versions of your app are available to deploy yet.</p>
                        <p class="has-text-centered">You need to <code>hippo push</code> via the CLI. Check out <a href="https://docs.deislabs.io/hippo/">the docs</a> for details.</p>
                    }
                </div>
            </div>

            <nav class="pagination" role="navigation" aria-label="pagination">
                <a class="pagination-previous" title="This is the first page" disabled>Previous</a>
                <a class="pagination-next">Next page</a>
                <ul class="pagination-list">
                    <li>
                        <a class="pagination-link is-current" aria-label="Page 1" aria-current="page">1</a>
                    </li>
                    <li>
                        <a class="pagination-link" aria-label="Goto page 2">2</a>
                    </li>
                    <li>
                        <a class="pagination-link" aria-label="Goto page 3">3</a>
                    </li>
                </ul>
            </nav>
        </div>
    }

    <div class="tab-pane history-wrapper" asp-class="app-history">
        <div class="columns">
            <div class="column">
                <h4>Application</h4>

                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">@Html.DisplayNameFor(model => model.Application.Name)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.Application.Created)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.Application.Modified)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Html.DisplayFor(model => model.Application.Name)</td>
                            <td>@Html.DisplayFor(model => model.Application.Created)</td>
                            <td>@Html.DisplayFor(model => model.Application.Modified)</td>
                        </tr>
                    </tbody>
                </table>

                <h4>History</h4>

                <table class="table">
                    <thead>
                        <tr>
                            <th class=""><abbr title="When">When</abbr></th>
                            <th class=""><abbr title="What">What</abbr></th>
                            <th class=""><abbr title="Channel">Channel</abbr></th>
                            <th class=""><abbr title="What">What</abbr></th>
                            <th class=""><abbr title="Who">Who</abbr></th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.RecentActivity) {
                        <tr>
                            <td>@item.Timestamp</td>
                            <td>@item.EventKind</td>
                            <td>@Model.ChannelNameFor(item)</td>
                            <td>@item.Description</td>
                            <td>@item.UserName</td>
                        </tr>
                    }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>
